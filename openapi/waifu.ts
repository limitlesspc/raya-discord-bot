/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/random/": {
    get: operations["random__random__get"];
  };
  "/info/": {
    /** Image infos */
    get: operations["image_info_info__get"];
  };
  "/endpoints/": {
    /** endpoints with and without info */
    get: operations["endpoints__endpoints__get"];
  };
  "/tags/": {
    /** endpoints with and without info */
    get: operations["endpoints__tags__get"];
  };
  "/test/": {
    /** A test route to see the difference in response time with and without a sql query */
    get: operations["test__test__get"];
  };
  "/fav/": {
    /** fetch a user favourite gallery */
    get: operations["fav__fav__get"];
  };
  "/fav/insert/": {
    /** Add an image to a user favourites. */
    post: operations["fav_insert_fav_insert__post"];
  };
  "/fav/delete/": {
    /** Remove an image from a user favourites. */
    delete: operations["fav_delete_fav_delete__delete"];
  };
  "/fav/toggle/": {
    /** Remove or add an image to the user favourites, depending on if it is already in. */
    post: operations["fav_toggle_fav_toggle__post"];
  };
  "/report/": {
    /** Report an image. */
    get: operations["report_report__get"];
  };
}

export interface components {
  schemas: {
    /**
     * CustomBool
     * @description An enumeration.
     * @enum {string}
     */
    CustomBool: "true" | "false" | "null";
    /**
     * FavOrderByType
     * @description An enumeration.
     * @enum {string}
     */
    FavOrderByType: "FAVOURITES" | "UPLOADED_AT" | "LIKED_AT";
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** ImageModel */
    ImageModel: {
      /** File */
      file: string;
      /** Extension */
      extension: string;
      /** Image Id */
      image_id: number;
      /** Favourites */
      favourites: number;
      /** Dominant Color */
      dominant_color: string;
      /** Source */
      source?: string;
      /** Uploaded At */
      uploaded_at: string;
      /**
       * Is Nsfw
       * @default false
       */
      is_nsfw?: boolean;
      /** Width */
      width: number;
      /** Height */
      height: number;
      /** Url */
      url: string;
      /** Preview Url */
      preview_url: string;
      /** Tags */
      tags: components["schemas"]["TagModel"][];
    };
    /**
     * ImageOrientation
     * @description An enumeration.
     * @enum {string}
     */
    ImageOrientation: "LANDSCAPE" | "PORTRAIT";
    /** ImageResponseModel */
    ImageResponseModel: {
      /** Images */
      images: components["schemas"]["ImageModel"][];
    };
    /**
     * OrderByType
     * @description An enumeration.
     * @enum {string}
     */
    OrderByType: "FAVOURITES" | "UPLOADED_AT";
    /** TagModel */
    TagModel: {
      /** Tag Id */
      tag_id: number;
      /** Name */
      name: string;
      /** Description */
      description: string;
      /**
       * Is Nsfw
       * @default false
       */
      is_nsfw?: boolean;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: string[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
}

export interface operations {
  random__random__get: {
    parameters: {
      query: {
        is_nsfw?: components["schemas"]["CustomBool"];
        selected_tags?: string[];
        excluded_tags?: string[];
        excluded_files?: string[];
        gif?: boolean;
        order_by?: components["schemas"]["OrderByType"];
        orientation?: components["schemas"]["ImageOrientation"];
        many?: boolean;
        full?: boolean;
      };
      header: {
        authorization?: unknown;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ImageResponseModel"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Image infos */
  image_info_info__get: {
    parameters: {
      query: {
        images: string[];
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ImageResponseModel"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** endpoints with and without info */
  endpoints__endpoints__get: {
    parameters: {
      query: {
        full?: boolean;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** endpoints with and without info */
  endpoints__tags__get: {
    parameters: {
      query: {
        full?: boolean;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** A test route to see the difference in response time with and without a sql query */
  test__test__get: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /** fetch a user favourite gallery */
  fav__fav__get: {
    parameters: {
      query: {
        is_nsfw?: components["schemas"]["CustomBool"];
        selected_tags?: string[];
        excluded_tags?: string[];
        excluded_files?: string[];
        gif?: boolean;
        order_by?: components["schemas"]["FavOrderByType"];
        orientation?: components["schemas"]["ImageOrientation"];
        user_id?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ImageResponseModel"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Add an image to a user favourites. */
  fav_insert_fav_insert__post: {
    parameters: {
      query: {
        image: string;
        user_id?: unknown;
      };
    };
    responses: {
      /** Successful Response */
      204: never;
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Remove an image from a user favourites. */
  fav_delete_fav_delete__delete: {
    parameters: {
      query: {
        image: string;
        user_id?: unknown;
      };
    };
    responses: {
      /** Successful Response */
      204: never;
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Remove or add an image to the user favourites, depending on if it is already in. */
  fav_toggle_fav_toggle__post: {
    parameters: {
      query: {
        image: string;
        user_id?: unknown;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Report an image. */
  report_report__get: {
    parameters: {
      query: {
        image: string;
        user_id?: number;
        description?: string;
      };
    };
    responses: {
      /** Successful Response */
      201: {
        content: {
          "application/json": unknown;
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
}

export interface external {}
